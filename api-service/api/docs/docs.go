// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/admins": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for Update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "UPDATE ADMIN",
                "parameters": [
                    {
                        "description": "createModel",
                        "name": "Admin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for Create admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "CREATE ADMIN",
                "parameters": [
                    {
                        "description": "createModel",
                        "name": "Admin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/admins/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for ListAdmins",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "LIST ADMINS",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListUsersRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/admins/login": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for login admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LOGIN"
                ],
                "summary": "LOGIN",
                "parameters": [
                    {
                        "description": "Login",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserResCreate"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/admins/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for Get",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "GET ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for Delete",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "DELETE ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RegisterRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/attraction": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for getting attraction by attraction_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ATTRACTION"
                ],
                "summary": "GET ATTRACTION BY ATTRACTION_ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "attraction_id",
                        "name": "attraction_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AttractionModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for updating attraction by attraction_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ATTRACTION"
                ],
                "summary": "UPDATE ATTRACTION",
                "parameters": [
                    {
                        "type": "string",
                        "description": "attraction_id",
                        "name": "attraction_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "UpdatingAttraction",
                        "name": "UpdatingAttraction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateAttraction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AttractionModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for creating attraction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ATTRACTION"
                ],
                "summary": "CREATE ATTRACTION",
                "parameters": [
                    {
                        "description": "Attraction",
                        "name": "Attraction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateAttraction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AttractionModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for deleting attraction by attraction_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ATTRACTION"
                ],
                "summary": "DELETE ATTRACTION BY ATTRACTION_ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "attraction_id",
                        "name": "attraction_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeleteResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/attraction/find": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for finding attractions by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ATTRACTION"
                ],
                "summary": "Find ATTRACTIONS BY NAME",
                "parameters": [
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListAttractionModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/attraction/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for listing attractions by page and limit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ATTRACTION"
                ],
                "summary": "LIST ATTRACTIONS BY PAGE AND LIMIT",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListAttractionModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/attraction/listlocation": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for listing attractions by page, limit, country, city and state_province",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ATTRACTION"
                ],
                "summary": "LIST ATTRACTIONS BY PAGE, LIMIT, COUNTRY, CITY AND STATE_PROVINCE",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "city",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "country",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "province",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListAttractionModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/booking/attractions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for List Attractions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOKING_ATTRACTION"
                ],
                "summary": "List Attractions",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.List"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for Update Booked Attraction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOKING_ATTRACTION"
                ],
                "summary": "Update Booked Attraction",
                "parameters": [
                    {
                        "description": "createModel",
                        "name": "models.UpdateBookingReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateBookingReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.BookingRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for Create Attraction Booking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOKING_ATTRACTION"
                ],
                "summary": "Create Attraction Booking",
                "parameters": [
                    {
                        "description": "createModel",
                        "name": "CreateBookingReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateBookingReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.BookingRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/booking/attractions/deleted": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for List Deleted Attractions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOKING_ATTRACTION"
                ],
                "summary": "List Deleted Attractions",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.List"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/booking/attractions/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for Get All Attractions By User Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOKING_ATTRACTION"
                ],
                "summary": "Get All Attractions By User Id",
                "parameters": [
                    {
                        "type": "string",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.IdRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for Delete Attraction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOKING_ATTRACTION"
                ],
                "summary": "Delete Attraction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/booking/hotels": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for List Hotels",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOKING_HOTEL"
                ],
                "summary": "List Hotels",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.List"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for Update Booked Hotel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOKING_HOTEL"
                ],
                "summary": "Update Booked Hotel",
                "parameters": [
                    {
                        "description": "createModel",
                        "name": "models.UpdateBookingReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateBookingReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.BookingRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for Create Hotel Booking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOKING_HOTEL"
                ],
                "summary": "Create Hotel Booking",
                "parameters": [
                    {
                        "description": "createModel",
                        "name": "CreateBookingReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateBookingReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.BookingRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/booking/hotels/deleted": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for List Deleted Hotels",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOKING_HOTEL"
                ],
                "summary": "List Deleted Hotels",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.List"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/booking/hotels/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for Get All Hotels By User Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOKING_HOTEL"
                ],
                "summary": "Get All Hotels By User Id",
                "parameters": [
                    {
                        "type": "string",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.IdRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for Delete Hotel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOKING_HOTEL"
                ],
                "summary": "Delete Hotel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/booking/restaurants": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for List Restaurants",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOKING_RESTAURANT"
                ],
                "summary": "List Restaurants",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.List"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for Update Booked Restaurant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOKING_RESTAURANT"
                ],
                "summary": "Update Booked Restaurant",
                "parameters": [
                    {
                        "description": "createModel",
                        "name": "models.UpdateBookingReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateBookingReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.BookingRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for Create Restaurant Booking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOKING_RESTAURANT"
                ],
                "summary": "Create Restaurant Booking",
                "parameters": [
                    {
                        "description": "createModel",
                        "name": "CreateBookingReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateBookingReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.BookingRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/booking/restaurants/deleted": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for List Deleted Restaurants",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOKING_RESTAURANT"
                ],
                "summary": "List Deleted Restaurants",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.List"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/booking/restaurants/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for Get All Restaurants By User Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOKING_RESTAURANT"
                ],
                "summary": "Get All Restaurants By User Id",
                "parameters": [
                    {
                        "type": "string",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.IdRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for Delete Restaurant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOKING_RESTAURANT"
                ],
                "summary": "Delete Restaurant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/booking/users/attraction/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for Get All Users By Attraction Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOKING_ATTRACTION"
                ],
                "summary": "Get All Users By Attraction Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.IdRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/booking/users/restaurant/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for Get All Users By Restaurant Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOKING_RESTAURANT"
                ],
                "summary": "Get All Users By Restaurant Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.IdRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/booking/users/room/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for Get All Users By Room Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOKING_HOTEL"
                ],
                "summary": "Get All Users By Room Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.IdRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/favourite/add": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for adding establishment to favourites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "FAVOURITE"
                ],
                "summary": "ADD ESTABLISHMENT TO FAVOURITES",
                "parameters": [
                    {
                        "type": "string",
                        "description": "establishment_id",
                        "name": "establishment_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.FavouriteModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/favourite/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for listing favourites by favourite_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "FAVOURITE"
                ],
                "summary": "LIST FAVOURITES BY USER_ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListFavouritesModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/favourite/remove": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for removing favourite by favourite_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "FAVOURITE"
                ],
                "summary": "REMOVE FROM FAVOURITES BY FAVOURITE_ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "favourite_id",
                        "name": "favourite_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RemoveResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/hotel": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for getting hotel by hotel_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HOTEL"
                ],
                "summary": "GET HOTEL BY HOTEL_ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "hotel_id",
                        "name": "hotel_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.HotelModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for updating hotel by hotel_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HOTEL"
                ],
                "summary": "UPDATE HOTEL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "hotel_id",
                        "name": "hotel_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "UpdatingHotel",
                        "name": "UpdatingHotel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateHotel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.HotelModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for creating hotel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HOTEL"
                ],
                "summary": "CREATE HOTEL",
                "parameters": [
                    {
                        "description": "Hotel",
                        "name": "Hotel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateHotel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.HotelModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for deleting hotel by hotel_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HOTEL"
                ],
                "summary": "DELETE HOTEL BY HOTEL_ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "hotel_id",
                        "name": "hotel_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeleteResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/hotel/find": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for listing hotels by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HOTEL"
                ],
                "summary": "FIND HOTELS BY NAME",
                "parameters": [
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListHotelsModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/hotel/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for listing hotels by page and limit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HOTEL"
                ],
                "summary": "LIST HOTELS BY PAGE AND LIMIT",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListHotelsModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/hotel/listlocation": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for listing hotels by page, limit, country, city and state_province",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HOTEL"
                ],
                "summary": "LIST HOTELS BY PAGE, LIMIT, COUNTRY, CITY AND STATE_PROVINCE",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "city",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "country",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "province",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListHotelsModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/media/establishment/{id}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Through this api frontent can upload establishment photo and get the link to the media.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MEDIA"
                ],
                "summary": "Upload Establishment photo",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Establishment_ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.EstablishmentImageRespons"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/v1/media/user-photo": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Through this api frontent can upload user photo and get the link to the media.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MEDIA"
                ],
                "summary": "Upload User photo",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/v1/restaurant": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for getting restaurant by restaurant_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RESTAURANT"
                ],
                "summary": "GET RESTAURANT BY RESTAURANT_ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "restaurant_id",
                        "name": "restaurant_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RestaurantModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for updating restaurant by restaurant_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RESTAURANT"
                ],
                "summary": "UPDATE RESTAURANT",
                "parameters": [
                    {
                        "type": "string",
                        "description": "restaurant_id",
                        "name": "restaurant_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "UpdatingRestaurant",
                        "name": "UpdatingRestaurant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateRestaurant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RestaurantModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for creating restaurant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RESTAURANT"
                ],
                "summary": "CREATE RESTAURANT",
                "parameters": [
                    {
                        "description": "Restaurant",
                        "name": "Restaurant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateRestaurant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RestaurantModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for deleting restaurant by restaurant_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RESTAURANT"
                ],
                "summary": "DELETE RESTAURANT BY RESTAURANT_ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "restaurant_id",
                        "name": "restaurant_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeleteResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/restaurant/find": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for listing restaurants by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RESTAURANT"
                ],
                "summary": "FIND RESTAURANTS BY NAME",
                "parameters": [
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListRestaurantsModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/restaurant/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for listing restaurants by page and limit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RESTAURANT"
                ],
                "summary": "LIST RESTAURANTS BY PAGE AND LIMIT",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListRestaurantsModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/restaurant/listlocation": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for listing restaurants by page, limit, country, city and state_province",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RESTAURANT"
                ],
                "summary": "LIST RESTAURANTS BY PAGE, LIMIT, COUNTRY, CITY AND STATE_PROVINCE",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "city",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "country",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "province",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListRestaurantsModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/review/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for creating review",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "REVIEW"
                ],
                "summary": "CREATE REVIEW",
                "parameters": [
                    {
                        "type": "string",
                        "description": "establishment_id",
                        "name": "establishment_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Review",
                        "name": "Review",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateReview"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ReviewModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/review/delete": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for deleting review by review_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "REVIEW"
                ],
                "summary": "DELETE REVIEW BY REVIEW_ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "review_id",
                        "name": "review_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeleteResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/review/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for listing reviews by establishment_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "REVIEW"
                ],
                "summary": "LIST REVIEWS BY ESTABLISHMENT_ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "establishment_id",
                        "name": "establishment_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListReviews"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/token/{refresh}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for updated acces token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TOKEN"
                ],
                "summary": "UPDATE TOKEN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Refresh Token",
                        "name": "refresh",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TokenResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/users": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for Update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "UPDATE",
                "parameters": [
                    {
                        "description": "createModel",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for Create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "CREATE",
                "parameters": [
                    {
                        "description": "createModel",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/users/code": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for verify new password code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SET-PASSWORD"
                ],
                "summary": "FORGET PASSWORD CODE",
                "parameters": [
                    {
                        "type": "string",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "email",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RegisterRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/users/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for ListUsers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "LIST USERS",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "column",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListUsersRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/users/list/deleted": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for ListDeletedUsers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "LIST DELETED USERS",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "column",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListUsersRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/users/login": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for login user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LOGIN"
                ],
                "summary": "LOGIN",
                "parameters": [
                    {
                        "description": "Login",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserResCreate"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/users/password": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for update new password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SET-PASSWORD"
                ],
                "summary": "SET NEW PASSWORD",
                "parameters": [
                    {
                        "type": "string",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "password",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserResCreate"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/users/register": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for register a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SIGNUP"
                ],
                "summary": "REGISTER USER",
                "parameters": [
                    {
                        "description": "RegisterUser",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegisterReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RegisterRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/users/set/{email}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for set new password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SET-PASSWORD"
                ],
                "summary": "FORGET PASSWORD",
                "parameters": [
                    {
                        "type": "string",
                        "description": "EMAIL",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RegisterRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/users/token": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for Get user by token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "GET BY TOKEN",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/users/verify": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for verify a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SIGNUP"
                ],
                "summary": "VERIFICATION",
                "parameters": [
                    {
                        "type": "string",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "email",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserResCreate"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        },
        "/v1/users/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for Get",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "GET",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Api for Delete",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "DELETE",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RegisterRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.StandartError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AttractionModel": {
            "type": "object",
            "properties": {
                "attraction_id": {
                    "type": "string"
                },
                "attraction_name": {
                    "type": "string"
                },
                "contact_number": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ImageModel"
                    }
                },
                "licence_url": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/models.LocationModel"
                },
                "owner_id": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                },
                "website_url": {
                    "type": "string"
                }
            }
        },
        "models.BookingRes": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "hra_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_canceled": {
                    "type": "boolean"
                },
                "number_of_people": {
                    "type": "integer"
                },
                "reason": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "will_arrive": {
                    "type": "string"
                },
                "will_leave": {
                    "type": "string"
                }
            }
        },
        "models.CreateAttraction": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "default": "87G9+V57, Shaykhontohur Street 28, Tashkent, Toshkent Shahri"
                },
                "attraction_name": {
                    "type": "string",
                    "default": "Anhor Park"
                },
                "city": {
                    "type": "string",
                    "default": "Tashkent"
                },
                "contact_number": {
                    "type": "string",
                    "default": "+(99891)-234-56-78"
                },
                "country": {
                    "type": "string",
                    "default": "Uzbekistan"
                },
                "description": {
                    "type": "string",
                    "default": "available for all ages"
                },
                "latitude": {
                    "type": "number",
                    "default": 40.7128
                },
                "licence_url": {
                    "type": "string",
                    "default": "https://creativecommons.org/licenses/by/4.0/"
                },
                "longitude": {
                    "type": "number",
                    "default": 74.006
                },
                "rating": {
                    "type": "number",
                    "default": 4.3
                },
                "state_province": {
                    "type": "string",
                    "default": "Shaykhontohur"
                },
                "website_url": {
                    "type": "string",
                    "default": "https://creativecommons.org/licenses/by/4.1/"
                }
            }
        },
        "models.CreateBookingReq": {
            "type": "object",
            "properties": {
                "hra_id": {
                    "type": "string"
                },
                "is_canceled": {
                    "type": "boolean"
                },
                "number_of_people": {
                    "type": "integer"
                },
                "reason": {
                    "type": "string"
                },
                "will_arrive": {
                    "type": "string"
                },
                "will_leave": {
                    "type": "string"
                }
            }
        },
        "models.CreateHotel": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "default": "87G9+V57, Shaykhontohur Street 28, Tashkent, Toshkent Shahri"
                },
                "city": {
                    "type": "string",
                    "default": "Tashkent"
                },
                "contact_number": {
                    "type": "string",
                    "default": "+(99891)-234-56-78"
                },
                "country": {
                    "type": "string",
                    "default": "Uzbekistan"
                },
                "description": {
                    "type": "string",
                    "default": "in affordable prices"
                },
                "hotel_name": {
                    "type": "string",
                    "default": "Silk Road"
                },
                "latitude": {
                    "type": "number",
                    "default": 40.7128
                },
                "licence_url": {
                    "type": "string",
                    "default": "https://creativecommons.org/licenses/by/1.2/"
                },
                "longitude": {
                    "type": "number",
                    "default": 74.006
                },
                "rating": {
                    "type": "number",
                    "default": 4.6
                },
                "state_province": {
                    "type": "string",
                    "default": "Shaykhontohur"
                },
                "website_url": {
                    "type": "string",
                    "default": "https://creativecommons.org/licenses/by/1.3/"
                }
            }
        },
        "models.CreateRestaurant": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "default": "87G9+V57, Shaykhontohur Street 28, Tashkent, Toshkent Shahri"
                },
                "city": {
                    "type": "string",
                    "default": "Tashkent"
                },
                "contact_number": {
                    "type": "string",
                    "default": "+(99891)-234-56-78"
                },
                "country": {
                    "type": "string",
                    "default": "Uzbekistan"
                },
                "description": {
                    "type": "string",
                    "default": "uzbek national cousine"
                },
                "latitude": {
                    "type": "number",
                    "default": 40.7128
                },
                "licence_url": {
                    "type": "string",
                    "default": "https://creativecommons.org/licenses/by/3.2/"
                },
                "longitude": {
                    "type": "number",
                    "default": 74.006
                },
                "opening_hours": {
                    "type": "string",
                    "default": "06:00-22:00"
                },
                "rating": {
                    "type": "number",
                    "default": 4.1
                },
                "restaurant_name": {
                    "type": "string",
                    "default": "Kamolon Osh Markazi"
                },
                "state_province": {
                    "type": "string",
                    "default": "Shaykhontohur"
                },
                "website_url": {
                    "type": "string",
                    "default": "https://creativecommons.org/licenses/by/3.3/"
                }
            }
        },
        "models.CreateReview": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string",
                    "default": "very good!"
                },
                "rating": {
                    "type": "number",
                    "default": 4.7
                }
            }
        },
        "models.DeleteResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.Error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.EstablishmentImageRespons": {
            "type": "object",
            "properties": {
                "image_url": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.FavouriteModel": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "establishment_id": {
                    "type": "string"
                },
                "favourite_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.HotelModel": {
            "type": "object",
            "properties": {
                "contact_number": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "hotel_id": {
                    "type": "string"
                },
                "hotel_name": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ImageModel"
                    }
                },
                "licence_url": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/models.LocationModel"
                },
                "owner_id": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                },
                "website_url": {
                    "type": "string"
                }
            }
        },
        "models.IdReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "models.IdRes": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.IdReq"
                    }
                }
            }
        },
        "models.ImageModel": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "establishment_id": {
                    "type": "string"
                },
                "image_id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.List": {
            "type": "object",
            "properties": {
                "bookings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BookingRes"
                    }
                }
            }
        },
        "models.ListAttractionModel": {
            "type": "object",
            "properties": {
                "attractions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AttractionModel"
                    }
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "models.ListFavouritesModel": {
            "type": "object",
            "properties": {
                "favourites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.FavouriteModel"
                    }
                }
            }
        },
        "models.ListHotelsModel": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "hotels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.HotelModel"
                    }
                }
            }
        },
        "models.ListRestaurantsModel": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "restaurants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.RestaurantModel"
                    }
                }
            }
        },
        "models.ListReviews": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "reviews": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ReviewModel"
                    }
                }
            }
        },
        "models.ListUsersRes": {
            "type": "object"
        },
        "models.LocationModel": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "establishment_id": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "location_id": {
                    "type": "string"
                },
                "longitude": {
                    "type": "number"
                },
                "state_province": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Login": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.RegisterReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.RegisterRes": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "models.RemoveResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.RestaurantModel": {
            "type": "object",
            "properties": {
                "contact_number": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ImageModel"
                    }
                },
                "licence_url": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/models.LocationModel"
                },
                "opening_hours": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "restaurant_id": {
                    "type": "string"
                },
                "restaurant_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "website_url": {
                    "type": "string"
                }
            }
        },
        "models.ReviewModel": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "establishment_id": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "review_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.StandartError": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/models.Error"
                }
            }
        },
        "models.TokenResp": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.UpdateAttraction": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "default": "updated address"
                },
                "attraction_name": {
                    "type": "string",
                    "default": "updated attraction name"
                },
                "city": {
                    "type": "string",
                    "default": "updated city"
                },
                "contact_number": {
                    "type": "string",
                    "default": "updated contact number"
                },
                "country": {
                    "type": "string",
                    "default": "updated country"
                },
                "description": {
                    "type": "string",
                    "default": "updated description"
                },
                "latitude": {
                    "type": "number",
                    "default": 1.1
                },
                "licence_url": {
                    "type": "string",
                    "default": "updated licence url"
                },
                "longitude": {
                    "type": "number",
                    "default": 1.1
                },
                "rating": {
                    "type": "number",
                    "default": 5
                },
                "state_province": {
                    "type": "string",
                    "default": "updated state or province"
                },
                "website_url": {
                    "type": "string",
                    "default": "updated website url"
                }
            }
        },
        "models.UpdateBookingReq": {
            "type": "object",
            "properties": {
                "hra_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_canceled": {
                    "type": "boolean"
                },
                "number_of_people": {
                    "type": "integer"
                },
                "reason": {
                    "type": "string"
                },
                "will_arrive": {
                    "type": "string"
                },
                "will_leave": {
                    "type": "string"
                }
            }
        },
        "models.UpdateHotel": {
            "type": "object",
            "properties": {
                "contact_number": {
                    "type": "string",
                    "default": "updated contact number"
                },
                "description": {
                    "type": "string",
                    "default": "updated description"
                },
                "hotel_name": {
                    "type": "string",
                    "default": "updated hotel name"
                },
                "licence_url": {
                    "type": "string",
                    "default": "updated licence url"
                },
                "location": {
                    "$ref": "#/definitions/models.UpdateLocation"
                },
                "rating": {
                    "type": "number",
                    "default": 5
                },
                "website_url": {
                    "type": "string",
                    "default": "updated website url"
                }
            }
        },
        "models.UpdateLocation": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "default": "updated address"
                },
                "city": {
                    "type": "string",
                    "default": "updated city"
                },
                "country": {
                    "type": "string",
                    "default": "updated country"
                },
                "latitude": {
                    "type": "number",
                    "default": 1.1
                },
                "longitude": {
                    "type": "number",
                    "default": 1.1
                },
                "state_province": {
                    "type": "string",
                    "default": "updated state or province"
                }
            }
        },
        "models.UpdateRestaurant": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "default": "updated address"
                },
                "city": {
                    "type": "string",
                    "default": "updated city"
                },
                "contact_number": {
                    "type": "string",
                    "default": "updated contact number"
                },
                "country": {
                    "type": "string",
                    "default": "updated country"
                },
                "description": {
                    "type": "string",
                    "default": "updated description"
                },
                "latitude": {
                    "type": "number",
                    "default": 1.1
                },
                "licence_url": {
                    "type": "string",
                    "default": "updated licence url"
                },
                "longitude": {
                    "type": "number",
                    "default": 1.1
                },
                "opening_hours": {
                    "type": "string",
                    "default": "09:00-00:00"
                },
                "rating": {
                    "type": "number",
                    "default": 4.9
                },
                "restaurant_name": {
                    "type": "string",
                    "default": "updated restaurant name"
                },
                "state_province": {
                    "type": "string",
                    "default": "updated state or province"
                },
                "website_url": {
                    "type": "string",
                    "default": "updated website url"
                }
            }
        },
        "models.UserReq": {
            "type": "object",
            "properties": {
                "card": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "models.UserRes": {
            "type": "object",
            "properties": {
                "card": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "profile_img": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.UserResCreate": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "birthday": {
                    "type": "string"
                },
                "card": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "phone_num": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Welcome To Booking API",
	Description:      "API for Touristan",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
